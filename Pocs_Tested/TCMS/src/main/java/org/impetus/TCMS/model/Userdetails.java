package org.impetus.TCMS.model;
// Generated Feb 24, 2012 12:07:10 PM by Hibernate Tools 3.4.0.CR1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Userdetails generated by hbm2java
 */
@Entity
@Table(name="userdetails"
    ,catalog="tcmsappdb"
    , uniqueConstraints = @UniqueConstraint(columnNames="name") 
)
public class Userdetails  implements java.io.Serializable {


     private Short userid;
     private Clientdetails clientdetails;
     private Userrole userrole;
     private Date createdOn;
     private String name;
     private String password;
     private Set<Testcasehistory> testcasehistories = new HashSet<Testcasehistory>(0);

    public Userdetails() {
    }

	
    public Userdetails(Date createdOn, String name, String password) {
        this.createdOn = createdOn;
        this.name = name;
        this.password = password;
    }
    public Userdetails(Clientdetails clientdetails, Userrole userrole, Date createdOn, String name, String password, Set<Testcasehistory> testcasehistories) {
       this.clientdetails = clientdetails;
       this.userrole = userrole;
       this.createdOn = createdOn;
       this.name = name;
       this.password = password;
       this.testcasehistories = testcasehistories;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="userid", unique=true, nullable=false)
    public Short getUserid() {
        return this.userid;
    }
    
    public void setUserid(Short userid) {
        this.userid = userid;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="clientid")
    public Clientdetails getClientdetails() {
        return this.clientdetails;
    }
    
    public void setClientdetails(Clientdetails clientdetails) {
        this.clientdetails = clientdetails;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="userrole")
    public Userrole getUserrole() {
        return this.userrole;
    }
    
    public void setUserrole(Userrole userrole) {
        this.userrole = userrole;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="createdOn", nullable=false, length=19)
    public Date getCreatedOn() {
        return this.createdOn;
    }
    
    public void setCreatedOn(Date createdOn) {
        this.createdOn = createdOn;
    }

    
    @Column(name="name", unique=true, nullable=false, length=30)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="password", nullable=false, length=30)
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userdetails")
    public Set<Testcasehistory> getTestcasehistories() {
        return this.testcasehistories;
    }
    
    public void setTestcasehistories(Set<Testcasehistory> testcasehistories) {
        this.testcasehistories = testcasehistories;
    }




}


